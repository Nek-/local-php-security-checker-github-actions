name: Release 

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '30 */4 * * *'

jobs:
  update:
    name: Push tagged image to registry
    runs-on: ubuntu-latest

    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - 
        name: Fetch latest version
        id: fetch_latest_version
        run: |
          last_release_info=$(curl --silent "https://api.github.com/repos/fabpot/local-php-security-checker/releases/latest")
          version=$(echo "${last_release_info}" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Last local php security checker version is ${version}"
          echo ::set-output name=version::${version}

          executable_url=$(echo "${last_release_info}" | grep -E "browser_download_url(.+)linux_amd64" | cut -d : -f 2,3 | tr -d \")
          echo "Executable url is ${executable_url}"
          echo ::set-output name=executable_url::${executable_url}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            pplotka/local-php-security-checker-github-actions:latest
            pplotka/local-php-security-checker-github-actions:${{ steps.fetch_latest_version.outputs.version }}
          build-args: |
            EXECUTABLE_URL=${{ steps.fetch_latest_version.outputs.executable_url }}

      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
            